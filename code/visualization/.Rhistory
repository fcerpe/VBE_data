# Individual data clouds
geom_point(data = subset(general, mask == "VWFA"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("antVWFA", "posVWFA")),
labeller = label_value) +                                           # split the decodings according to group = area
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("FRW - FPW"," ", "FRW - FNW"," ", "FRW - FFS"," ", "FPW - FNW"," ", "FPW - FFS"," ", "FNW - FFS"," ",
"BRW - BPW"," ", "BRW - BNW"," ", "BRW - BFS"," ", "BPW - BNW"," ", "BPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - VWFA")
# VWFA
ggplot(subset(stats_gen, mask == "VWFA"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("french_expert",   "braille_expert",    "french_control",  "braille_control"),
values = c("#69B5A2",         "#FF9E4A",           "#699ae5",         "#da5F49"),
labels = c("french - expert", "braille - expert", "french - control", "braille - control")) +
# Mean and SE bars
# SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = subset(general, mask == "VWFA"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA")),
labeller = label_value) +                                           # split the decodings according to group = area
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("FRW - FPW"," ", "FRW - FNW"," ", "FRW - FFS"," ", "FPW - FNW"," ", "FPW - FFS"," ", "FNW - FFS"," ",
"BRW - BPW"," ", "BRW - BNW"," ", "BRW - BFS"," ", "BPW - BNW"," ", "BPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - VWFA")
ggsave("figures/area-VWFA_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
# VWFA
ggplot(subset(stats_gen, mask == "VWFA"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("french_expert",   "braille_expert",    "french_control",  "braille_control"),
values = c("#69B5A2",         "#FF9E4A",           "#699ae5",         "#da5F49"),
labels = c("french - expert", "braille - expert", "french - control", "braille - control")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = subset(general, mask == "VWFA"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA")),
labeller = label_value) +                                           # split the decodings according to group = area
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nFRW - FPW"," ", "FRW - FNW"," ", "FRW - FFS"," ", "FPW - FNW"," ", "FPW - FFS"," ", "FNW - FFS"," ",
"BRW - BPW"," ", "BRW - BNW"," ", "BRW - BFS"," ", "BPW - BNW"," ", "BPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - VWFA")
# VWFA
ggplot(subset(stats_gen, mask == "VWFA"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("french_expert",   "braille_expert",    "french_control",  "braille_control"),
values = c("#69B5A2",         "#FF9E4A",           "#699ae5",         "#da5F49"),
labels = c("french - expert", "braille - expert", "french - control", "braille - control")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = subset(general, mask == "VWFA"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA")),
labeller = label_value) +                                           # split the decodings according to group = area
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "FNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - VWFA")
ggsave("figures/area-VWFA_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
ggplot(subset(stats_gen, mask == "lLO"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("french_expert",   "braille_expert",    "french_control",  "braille_control"),
values = c("#69B5A2",         "#FF9E4A",           "#699ae5",         "#da5F49"),
labels = c("french - expert", "braille - expert", "french - control", "braille - control")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = subset(general, mask == "lLO"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "FNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - lLO")
ggsave("figures/area-lLO_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
# VWFA
ggplot(subset(stats_gen, mask == "VWFA"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("french_expert",   "braille_expert",    "french_control",  "braille_control"),
values = c("#69B5A2",         "#FF9E4A",           "#699ae5",         "#da5F49"),
labels = c("french - expert", "braille - expert", "french - control", "braille - control")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = subset(general, mask == "VWFA"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "FNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - VWFA")
ggsave("figures/area-VWFA_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
ggplot(subset(stats_gen, mask == "rLO"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("french_expert",   "braille_expert",    "french_control",  "braille_control"),
values = c("#69B5A2",         "#FF9E4A",           "#699ae5",         "#da5F49"),
labels = c("french - expert", "braille - expert", "french - control", "braille - control")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = subset(general, mask == "rLO"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "FNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - lLO")
# rLO
ggplot(subset(stats_gen, mask == "rLO"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("french_expert",   "braille_expert",    "french_control",  "braille_control"),
values = c("#69B5A2",         "#FF9E4A",           "#699ae5",         "#da5F49"),
labels = c("french - expert", "braille - expert", "french - control", "braille - control")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = subset(general, mask == "rLO"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "FNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "BNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Pairwise decoding - rLO")
ggsave("figures/area-rLO_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
### Initialize the necessary
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
### Load matrices of decoding accuracies, only for experts. Pointless in controls
# Experts
exp_accuracies <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-experts_task-wordsDecoding_condition-cross-script_nbvoxels-73.csv")
### Manipulate the matrix to get something readable by ggplot
exp_accuracies <- as.data.frame(exp_accuracies)
# rename area: VWFAfr to VWFA
exp_accuracies$mask <- ifelse(exp_accuracies$mask == "VWFAfr", "VWFA", exp_accuracies$mask)
# Drop unnecessary columns
# remove tmaps, remove voxNb and image columns
exp_accuracies <- group_split(exp_accuracies, image)[[1]]
exp_accuracies <- subset(exp_accuracies, select = -c(4,5,6,7,8))
# divide cross-modal decoding (cmd) by type of training and test:
cmd_both <- group_split(exp_accuracies, modality)[[1]]
cmd_trBR_teFR <- group_split(exp_accuracies, modality)[[2]]
cmd_trFR_teBR <- group_split(exp_accuracies, modality)[[3]]
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
library("dplyr")
### Load matrices of decoding accuracies, only for experts. Pointless in controls
# Experts
experts <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-experts_task-wordsDecoding_condition-cross-script_nbvoxels-73.csv")
### Manipulate the matrix to get something readable by ggplot
experts <- as.data.frame(experts)
# rename area: VWFAfr to VWFA
experts$mask <- ifelse(experts$mask == "VWFAfr", "VWFA", experts$mask)
View(experts)
### Initialize the necessary
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
library("dplyr")
### Load matrices of decoding accuracies, only for experts. Pointless in controls
# Experts
experts <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-experts_task-wordsDecoding_condition-cross-script_nbvoxels-73.csv")
### Manipulate the matrix to get something readable by ggplot
experts <- as.data.frame(experts)
# rename area: VWFAfr to VWFA
experts$mask <- ifelse(experts$mask == "VWFAfr", "VWFA", experts$mask)
# Drop unnecessary columns
# remove tmaps, remove voxNb and image columns
experts <- group_split(experts, image)[[1]]
experts <- subset(experts, select = -c(4,5,6,7,8))
experts <- subset(experts, modality != "both")
experts$numDecoding <- t(repmat(c(1,2,3,4,5,6,7,8,9,10,11,12), 1,nrow(experts)/12))
experts$numDecoding <- t(repmat(c(1,2,3,4,5,6), 1,nrow(experts)/12))
experts$numDecoding <- t(repmat(c(1,2,3,4,5,6), 1,nrow(experts)/6))
### Initialize the necessary
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
library("dplyr")
### Load matrices of decoding accuracies, only for experts. Pointless in controls
# Experts
experts <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-experts_task-wordsDecoding_condition-cross-script_nbvoxels-73.csv")
### Manipulate the matrix to get something readable by ggplot
experts <- as.data.frame(experts)
# rename area: VWFAfr to VWFA
experts$mask <- ifelse(experts$mask == "VWFAfr", "VWFA", experts$mask)
# Drop unnecessary columns
# remove tmaps, remove voxNb and image columns
experts <- group_split(experts, image)[[1]]
experts <- subset(experts, modality != "both")
# Add number of decoding pair, to place the horizontal lines
experts$numDecoding <- t(repmat(c(1,2,3,4,5,6), 1,nrow(experts)/6))
general$decodingCondition <- ifelse(general$group == "tr-braille_te-french",
paste(general$decodingCondition,"_BF",sep=""),
paste(general$decodingCondition,"_FB",sep=""))
### Initialize the necessary
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
library("dplyr")
### Load matrices of decoding accuracies, only for experts. Pointless in controls
# Experts
experts <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-experts_task-wordsDecoding_condition-cross-script_nbvoxels-73.csv")
### Manipulate the matrix to get something readable by ggplot
experts <- as.data.frame(experts)
# rename area: VWFAfr to VWFA
experts$mask <- ifelse(experts$mask == "VWFAfr", "VWFA", experts$mask)
# Drop unnecessary columns
# remove tmaps, remove voxNb and image columns
experts <- group_split(experts, image)[[1]]
experts <- subset(experts, modality != "both")
experts <- subset(experts, select = -c(4,5,6,7,8))
# Add number of decoding pair, to place the horizontal lines
experts$numDecoding <- t(repmat(c(1,2,3,4,5,6), 1,nrow(experts)/6))
general$decodingCondition <- ifelse(general$group == "tr-braille_te-french",
paste(general$decodingCondition,"_BF",sep=""),
paste(general$decodingCondition,"_FB",sep=""))
general$decodingCondition <- ifelse(general$modality == "tr-braille_te-french",
paste(general$decodingCondition,"_BF",sep=""),
paste(general$decodingCondition,"_FB",sep=""))
experts$decodingCondition <- ifelse(experts$modality == "tr-braille_te-french",
paste(experts$decodingCondition,"_BF",sep=""),
paste(experts$decodingCondition,"_FB",sep=""))
stats <- experts %>% group_by(mask, decodingCondition, script, numDecoding) %>%
summarize(mean_accuracy = mean(accuracy), sd_accuracy = sd(accuracy), se_accuracy = sd(accuracy)/sqrt(6), .groups = 'keep')
stats <- experts %>% group_by(mask, decodingCondition, modality, numDecoding) %>%
summarize(mean_accuracy = mean(accuracy), sd_accuracy = sd(accuracy), se_accuracy = sd(accuracy)/sqrt(6), .groups = 'keep')
# Both training - test conditions
ggplot(stats, aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("tr-french_te-braille", "tr-french_te-braille"),
values = c("#69B5A2",              "#FF9E4A"),
labels = c("training FR, test BR", "training BR, test FR")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = experts,
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA", "lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nRW - PW"," ", "\nRW - NW"," ", "\nRW - FS"," ",
"\nPW - NW"," ", "\nPW - FS"," ", "\nNW - FS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Crossmodal decoding")
View(stats)
View(general)
View(stats_gen)
# Both training - test conditions
ggplot(stats, aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("tr-french_te-braille", "tr-french_te-braille"),
values = c("#69B5A2",              "#FF9E4A"),
labels = c("training FR, test BR", "training BR, test FR")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
# geom_point(data = experts,
#            aes(x = reorder(decodingCondition, cluster),
#                y = accuracy,
#                colour = cluster),
#            position = position_jitter(w = 0.3, h = 0.01),
#            alpha = 0.2,
#            legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA", "lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nRW - PW"," ", "\nRW - NW"," ", "\nRW - FS"," ",
"\nPW - NW"," ", "\nPW - FS"," ", "\nNW - FS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Crossmodal decoding")
ggplot(stats, aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("tr-french_te-braille", "tr-french_te-braille"),
values = c("#69B5A2",              "#FF9E4A"),
labels = c("training FR, test BR", "training BR, test FR")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = modality),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
# geom_point(data = experts,
#            aes(x = reorder(decodingCondition, cluster),
#                y = accuracy,
#                colour = cluster),
#            position = position_jitter(w = 0.3, h = 0.01),
#            alpha = 0.2,
#            legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA", "lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nRW - PW"," ", "\nRW - NW"," ", "\nRW - FS"," ",
"\nPW - NW"," ", "\nPW - FS"," ", "\nNW - FS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Crossmodal decoding")
# Both training - test conditions
ggplot(stats, aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("tr-french_te-braille", "tr-braille_te-french"),
values = c("#69B5A2",              "#FF9E4A"),
labels = c("training FR, test BR", "training BR, test FR")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = modality),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
# geom_point(data = experts,
#            aes(x = reorder(decodingCondition, cluster),
#                y = accuracy,
#                colour = cluster),
#            position = position_jitter(w = 0.3, h = 0.01),
#            alpha = 0.2,
#            legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA", "lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nRW - PW"," ", "\nRW - NW"," ", "\nRW - FS"," ",
"\nPW - NW"," ", "\nPW - FS"," ", "\nNW - FS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Crossmodal decoding")
ggplot(stats, aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "script x group",
limits = c("tr-french_te-braille", "tr-braille_te-french"),
values = c("#69B5A2",              "#FF9E4A"),
labels = c("training FR, test BR", "training BR, test FR")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = modality),
position = position_dodge(1), size = .5, linewidth = 1) +
# Individual data clouds
geom_point(data = experts,
aes(x = reorder(decodingCondition, modality),
y = accuracy,
colour = modality),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.2,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +                # .50 line
theme_classic() +                                                              # white background, simple theme
ylim(0,1) +                                                                    # proper y axis length
theme(axis.text.x = element_text(angle = 90), axis.ticks = element_blank()) +       # oblique text for x axis
facet_grid(~factor(mask, levels = c("VWFA", "lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,                                                   # customize x axis labels
labels = c("\nRW - PW"," ", "\nRW - NW"," ", "\nRW - FS"," ",
"\nPW - NW"," ", "\nPW - FS"," ", "\nNW - FS"," ")) +
labs(x = "Decoding pair", y = "Accuracy", title = "Crossmodal decoding")
ggsave("figures/crossmodal-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
