# LOC
ggplot(stats_loc, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert"),
aesthetics = c("colour", "fill")) +
# Individual data clouds
geom_point(data = loc,
aes(x = reorder(condition, cluster),
y = average_activation,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
facet_grid(~factor(mask, levels = c("lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in left and right LO")
ggsave("figures/cond-LOC_univariate_average-activation.png", width = 3000, height = 1800, dpi = 320, units = "px")
# POSTEMP - average activation across the whole area
ggplot(stats_postemp, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert"),
aesthetics = c("colour", "fill")) +
# Individual data clouds
geom_point(data = postemp,
aes(x = reorder(condition, cluster),
y = average_activation,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in left and right LO")
ggsave("figures/cond-PosTemp_univariate_average-activation.png", width = 3000, height = 1800, dpi = 320, units = "px")
# SPLIT
ggplot(stats_split, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert"),
aesthetics = c("colour", "fill")) +
# Individual data clouds
geom_point(data = split,
aes(x = reorder(condition, cluster),
y = average_activation,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
facet_grid(~factor(mask, levels = c("antVWFA", "posVWFA")),
labeller = label_value) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in ant- and pos-VWFA")
ggsave("figures/cond-splitVWFA_univariate_average-activation.png", width = 3000, height = 1800, dpi = 320, units = "px")
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
library("dplyr")
### Load matrices
# VWFA - one single ROI
vwfa <- read.csv("/Users/cerpelloni/Desktop/GitHub/VisualBraille_data/code/stats/univariateReport_vwfa.txt")
# SPLIT - anterior and posterior VWFA
split <- read.csv("/Users/cerpelloni/Desktop/GitHub/VisualBraille_data/code/stats/univariateReport_split.txt")
# POSTEMP - from Fedorenko et al.
postemp <- read.csv("/Users/cerpelloni/Desktop/GitHub/VisualBraille_data/code/stats/univariateReport_postemp.txt")
# LOC - left and right LO from our localizer
loc <- read.csv("/Users/cerpelloni/Desktop/GitHub/VisualBraille_data/code/stats/univariateReport_loc.txt")
# V1 - bilateral from visfatlas
v1 <- read.csv("/Users/cerpelloni/Desktop/GitHub/VisualBraille_data/code/stats/univariateReport_v1_jubrain.txt")
### Manipulate the matrix
# as dataframe
vwfa <- as.data.frame(vwfa)
split <- as.data.frame(split)
postemp <- as.data.frame(postemp)
loc <- as.data.frame(loc)
v1 <- as.data.frame(v1)
# rename mean column to avoid confusion
vwfa$average_activation <- vwfa$mean
split$average_activation <- split$mean
postemp$average_activation <- postemp$mean
loc$average_activation <- loc$mean
v1$average_activation <- v1$mean
# remove unnecessary columns
vwfa <- subset(vwfa, select = -c(5,7))
split <- subset(split, select = -c(7))
postemp <- subset(postemp, select = -c(5,7))
loc <- subset(loc, select = -c(7))
v1 <- subset(v1, select = -c(5,7))
# modify subject column to only keep number
vwfa$subject <- as.numeric(gsub('sub-0*', '', vwfa$subject))
split$subject <- as.numeric(gsub('sub-0*', '', split$subject))
postemp$subject <- as.numeric(gsub('sub-0*', '', postemp$subject))
loc$subject <- as.numeric(gsub('sub-0*', '', loc$subject))
v1$subject <- as.numeric(gsub('sub-0*', '', v1$subject))
# Add number of decoding pair, to place the horizontal lines
vwfa$contrast <- t(repmat(c(1,2,3,4,5,6,7,8), 1,nrow(vwfa)/8))
vwfa$script <- t(repmat(c(1,1,1,1,2,2,2,2), 1,nrow(vwfa)/8))
split$contrast <- t(repmat(c(1,2,3,4,5,6,7,8), 1,nrow(split)/8))
split$script <- t(repmat(c(1,1,1,1,2,2,2,2), 1,nrow(split)/8))
postemp$contrast <- t(repmat(c(1,2,3,4,5,6,7,8), 1,nrow(postemp)/8))
postemp$script <- t(repmat(c(1,1,1,1,2,2,2,2), 1,nrow(postemp)/8))
loc$contrast <- t(repmat(c(1,2,3,4,5,6,7,8), 1,nrow(loc)/8))
loc$script <- t(repmat(c(1,1,1,1,2,2,2,2), 1,nrow(loc)/8))
v1$contrast <- t(repmat(c(1,2,3,4,5,6,7,8), 1,nrow(v1)/8))
v1$script <- t(repmat(c(1,1,1,1,2,2,2,2), 1,nrow(v1)/8))
# Add cluster information, for coloring purposes
vwfa$cluster <- ifelse(vwfa$script == 1, ifelse(vwfa$group == "expert", "french_expert", "french_control"),
ifelse(vwfa$group == "expert", "braille_expert", "braille_control"))
split$cluster <- ifelse(split$script == 1, ifelse(split$group == "expert", "french_expert", "french_control"),
ifelse(split$group == "expert", "braille_expert", "braille_control"))
postemp$cluster <- ifelse(postemp$script == 1, ifelse(postemp$group == "expert", "french_expert", "french_control"),
ifelse(postemp$group == "expert", "braille_expert", "braille_control"))
loc$cluster <- ifelse(loc$script == 1, ifelse(loc$group == "expert", "french_expert", "french_control"),
ifelse(loc$group == "expert", "braille_expert", "braille_control"))
v1$cluster <- ifelse(v1$script == 1, ifelse(v1$group == "expert", "french_expert", "french_control"),
ifelse(v1$group == "expert", "braille_expert", "braille_control"))
# rename conditions to specify group (exp, ctr)
vwfa$condition <- ifelse(vwfa$group == "expert", paste(vwfa$condition,"_exp",sep=""), paste(vwfa$condition,"_ctr",sep=""))
split$condition <- ifelse(split$group == "expert", paste(split$condition,"_exp",sep=""), paste(split$condition,"_ctr",sep=""))
postemp$condition <- ifelse(postemp$group == "expert", paste(postemp$condition,"_exp",sep=""), paste(postemp$condition,"_ctr",sep=""))
loc$condition <- ifelse(loc$group == "expert", paste(loc$condition,"_exp",sep=""), paste(loc$condition,"_ctr",sep=""))
v1$condition <- ifelse(v1$group == "expert", paste(v1$condition,"_exp",sep=""), paste(v1$condition,"_ctr",sep=""))
# calculate stats for error bars
stats_vwfa <- vwfa %>% group_by(condition, script, contrast, cluster, group) %>%
summarize(mean_activation = mean(average_activation), sd_activation = sd(average_activation), se_activation = sd(average_activation)/sqrt(6),
.groups = 'keep')
stats_split <- split %>% group_by(mask, condition, script, contrast, cluster, group) %>%
summarize(mean_activation = mean(average_activation), sd_activation = sd(average_activation), se_activation = sd(average_activation)/sqrt(6),
.groups = 'keep')
stats_postemp <- postemp %>% group_by(condition, script, contrast, cluster, group) %>%
summarize(mean_activation = mean(average_activation), sd_activation = sd(average_activation), se_activation = sd(average_activation)/sqrt(6),
.groups = 'keep')
stats_loc <- loc %>% group_by(mask, condition, script, contrast, cluster, group) %>%
summarize(mean_activation = mean(average_activation), sd_activation = sd(average_activation), se_activation = sd(average_activation)/sqrt(6),
.groups = 'keep')
stats_v1 <- v1 %>% group_by(condition, script, contrast, cluster, group) %>%
summarize(mean_activation = mean(average_activation), sd_activation = sd(average_activation), se_activation = sd(average_activation)/sqrt(6),
.groups = 'keep')
### PLOTS
## WITH SUBJECT LABEL
# VWFA - average activation across the whole area
ggplot(stats_vwfa, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert")) +
# Individual data clouds
geom_text(data = vwfa,
aes(x = reorder(condition, cluster),
y = average_activation, label = subject),
alpha = 0.8, size = 3, vjust = -0.5, hjust = 1.5, check_overlap = T) +
geom_point(data = vwfa, aes(x = reorder(condition, cluster),  y = average_activation),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in VWFA")
ggsave("figures/cond-VWFA_univariate_average-activation_with-labels.png", width = 3000, height = 1800, dpi = 320, units = "px")
# SPLIT
ggplot(stats_split, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert")) +
# Individual data clouds
geom_text(data = split,
aes(x = reorder(condition, cluster),
y = average_activation, label = subject),
alpha = 0.8, size = 3, vjust = -0.5, hjust = 1.5, check_overlap = T) +
geom_point(data = split, aes(x = reorder(condition, cluster),  y = average_activation),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
facet_grid(~factor(mask, levels = c("antVWFA", "posVWFA")),
labeller = label_value) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in ant- and pos-VWFA")
ggsave("figures/cond-splitVWFA_univariate_average-activation_with-labels.png", width = 3000, height = 1800, dpi = 320, units = "px")
# POSTEMP - average activation across the whole area
ggplot(stats_postemp, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert")) +
# Individual data clouds
geom_text(data = postemp,
aes(x = reorder(condition, cluster),
y = average_activation, label = subject),
alpha = 0.8, size = 3, vjust = -0.5, hjust = 1.5, check_overlap = T) +
geom_point(data = postemp, aes(x = reorder(condition, cluster),  y = average_activation),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in PosTemp")
ggsave("figures/cond-PosTemp_univariate_average-activation_with-labels.png", width = 3000, height = 1800, dpi = 320, units = "px")
# LOC
ggplot(stats_loc, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert")) +
# Individual data clouds
geom_text(data = loc,
aes(x = reorder(condition, cluster),
y = average_activation, label = subject),
alpha = 0.8, size = 3, vjust = -0.5, hjust = 1.5, check_overlap = T) +
geom_point(data = loc, aes(x = reorder(condition, cluster),  y = average_activation),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
facet_grid(~factor(mask, levels = c("lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in left and right LO")
ggsave("figures/cond-LOC_univariate_average-activation_with-labels.png", width = 3000, height = 1800, dpi = 320, units = "px")
# V1 - average activation across the whole area
ggplot(stats_v1, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert")) +
# Individual data clouds
geom_text(data = v1,
aes(x = reorder(condition, cluster),
y = average_activation, label = subject),
alpha = 0.8, size = 3, vjust = -0.5, hjust = 1.5, check_overlap = T) +
geom_point(data = postemp, aes(x = reorder(condition, cluster),  y = average_activation),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in V1")
ggsave("figures/cond-V1-jubrain_univariate_average-activation_with-labels.png", width = 3000, height = 1800, dpi = 320, units = "px")
## WITH JUST INDIVIDUAL DOTS
# VWFA
ggplot(stats_vwfa, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert"),
aesthetics = c("colour", "fill")) +
# Individual data clouds
geom_point(data = vwfa,
aes(x = reorder(condition, cluster),
y = average_activation,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in VWFA")
ggsave("figures/cond-VWFA_univariate_average-activation.png", width = 3000, height = 1800, dpi = 320, units = "px")
# LOC
ggplot(stats_loc, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert"),
aesthetics = c("colour", "fill")) +
# Individual data clouds
geom_point(data = loc,
aes(x = reorder(condition, cluster),
y = average_activation,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
facet_grid(~factor(mask, levels = c("lLO", "rLO")),
labeller = label_value) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in left and right LO")
ggsave("figures/cond-LOC_univariate_average-activation.png", width = 3000, height = 1800, dpi = 320, units = "px")
# POSTEMP - average activation across the whole area
ggplot(stats_postemp, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert"),
aesthetics = c("colour", "fill")) +
# Individual data clouds
geom_point(data = postemp,
aes(x = reorder(condition, cluster),
y = average_activation,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in left and right LO")
ggsave("figures/cond-PosTemp_univariate_average-activation.png", width = 3000, height = 1800, dpi = 320, units = "px")
# SPLIT
ggplot(stats_split, aes(x = condition, y = mean_activation)) +
geom_col(aes(x = condition, y = mean_activation, fill = cluster)) +
geom_errorbar(aes(ymin = mean_activation - se_activation, ymax = mean_activation + se_activation), width = 0) +
scale_fill_manual(name = "script x group",
values = c("#da5F49",           "#FF9E4A",          "#699ae5",          "#69B5A2"),
labels = c("braille - control", "braille - expert", "french - control", "french - expert"),
aesthetics = c("colour", "fill")) +
# Individual data clouds
geom_point(data = split,
aes(x = reorder(condition, cluster),
y = average_activation,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.4) +
theme_classic() +
theme(axis.ticks = element_blank()) +
facet_grid(~factor(mask, levels = c("antVWFA", "posVWFA")),
labeller = label_value) +
scale_x_discrete(limits=rev,
labels = c("\t\t\tFRW"," ", "\t\t\tFPW"," ", "\t\t\tFNW"," ", "\t\t\tFFS"," ",
"\t\t\tBRW"," ", "\t\t\tBPW"," ", "\t\t\tBNW"," ", "\t\t\tBFS"," ")) +
labs(x = "Stimulus condition", y = "Mean univariate activation", title = "Univariate acitvation in ant- and pos-VWFA")
ggsave("figures/cond-splitVWFA_univariate_average-activation.png", width = 3000, height = 1800, dpi = 320, units = "px")
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
library("dplyr")
### Load matrices of decoding accuracies for both groups
# Controls
controls <- read.csv("../../outputs/derivatives/CoSMoMVPA/decoding-pairwise-within-script_grp-controls_rois-expansionIntersection_nbvoxels-43.csv")
# Experts
experts <- read.csv("../../outputs/derivatives/CoSMoMVPA/decoding-pairwise-within-script_grp-experts_rois-expansionIntersection_nbVoxels-43.csv")
### Manipulate the matrix to get something readable by ggplot
controls <- as.data.frame(controls)
experts <- as.data.frame(experts)
# rename area: VWFAfr to VWFA
experts$mask <- ifelse(experts$mask == "VWFAfr", "VWFA", experts$mask)
controls$mask <- ifelse(controls$mask == "VWFAfr", "VWFA", controls$mask)
# Assign the script, to ease splitting the original accuracy matrix: 1 = French, 2 = Braille
experts$script <- t(repmat(c(1,1,1,1,1,1,2,2,2,2,2,2), 1, nrow(experts)/12))
controls$script <- t(repmat(c(1,1,1,1,1,1,2,2,2,2,2,2), 1, nrow(controls)/12))
# Assign group, to keep track once merged
controls$group <- rep("control", nrow(controls))
experts$group <- rep("expert", nrow(experts))
# remove tmaps, remove voxNb and image columns
controls <- group_split(controls, image)[[1]]
controls <- subset(controls, select = -c(4,5,6,7,8))
experts <- group_split(experts, image)[[1]]
experts <- subset(experts, select = -c(4,5,6,7,8))
# rename scripts 1 and 2 with french and braille
controls$script <- ifelse(controls$script == 1, "french", "braille")
experts$script <- ifelse(experts$script == 1, "french", "braille")
# Add number of decoding pair, to place the horizontal lines
experts$numDecoding <- t(repmat(c(1,2,3,4,5,6,7,8,9,10,11,12), 1,nrow(experts)/12))
controls$numDecoding <- t(repmat(c(1,2,3,4,5,6,7,8,9,10,11,12), 1,nrow(controls)/12))
# calculate stats for error bars
stats_controls <- controls %>% group_by(mask, decodingCondition, script, numDecoding) %>%
summarize(mean_accuracy = mean(accuracy), sd_accuracy = sd(accuracy), se_accuracy = sd(accuracy)/sqrt(6), .groups = 'keep')
stats_experts <-experts %>% group_by(mask, decodingCondition, script, numDecoding) %>%
summarize(mean_accuracy = mean(accuracy), sd_accuracy = sd(accuracy), se_accuracy = sd(accuracy)/sqrt(6), .groups = 'keep')
# combine in general matrix and calculate stats for error bars
general <- rbind(experts, controls)
general$cluster <- paste(general$script, general$group, sep="_")
general$decodingCondition <- ifelse(general$group == "expert",
paste(general$decodingCondition,"_exp",sep=""),
paste(general$decodingCondition,"_ctr",sep=""))
stats_gen <- general %>% group_by(mask, decodingCondition, script, numDecoding, cluster) %>%
summarize(mean_accuracy = mean(accuracy), sd_accuracy = sd(accuracy), se_accuracy = sd(accuracy)/sqrt(6), .groups = 'keep')
### Plots - new way
# VWFA
ggplot(subset(stats_gen, mask == "VWFA"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "    ",
limits = c("french_expert",   "french_control",  "braille_expert",    "braille_control"),
values = c("#69B5A2",         "#699ae5",         "#FF9E4A",          "#da5F49"),
labels = c("expert - french", "control - french", "expert - braille", "control - braille")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .75, linewidth = 1.7) +
# Individual data clouds
geom_point(data = subset(general, mask == "VWFA"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.3,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +
theme_classic() +
ylim(0,1) +
theme(axis.text.x = element_text(angle = 45,  vjust=1, hjust=1, size = 10),
axis.ticks = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)) +
scale_x_discrete(limits=rev,
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "\nFNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "\nBNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy")
ggsave("figures/area-VWFA_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
# lLO
ggplot(subset(stats_gen, mask == "lLO"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "      ",
limits = c("french_expert",   "french_control",  "braille_expert",    "braille_control"),
values = c("#69B5A2",         "#699ae5",         "#FF9E4A",          "#da5F49"),
labels = c("expert - french", "control - french", "expert - braille", "control - braille")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .75, linewidth = 1.7) +
# Individual data clouds
geom_point(data = subset(general, mask == "lLO"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.3,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +
theme_classic() +
ylim(0,1) +
theme(axis.text.x = element_text(angle = 45,  vjust=1, hjust=1, size = 10),
axis.ticks = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)) +
scale_x_discrete(limits=rev,
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "\nFNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "\nBNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy")
ggsave("figures/area-lLO_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
# rLO
ggplot(subset(stats_gen, mask == "rLO"), aes(x = decodingCondition, y = mean_accuracy)) +
scale_color_manual(name = "   ",
limits = c("french_expert",   "french_control",  "braille_expert",    "braille_control"),
values = c("#69B5A2",         "#699ae5",         "#FF9E4A",          "#da5F49"),
labels = c("expert - french", "control - french", "expert - braille", "control - braille")) +
# Mean and SE bars
geom_pointrange(aes(x = decodingCondition,
y = mean_accuracy,
ymin = mean_accuracy - se_accuracy,
ymax = mean_accuracy + se_accuracy,
colour = cluster),
position = position_dodge(1), size = .75, linewidth = 1.7) +
# Individual data clouds
geom_point(data = subset(general, mask == "rLO"),
aes(x = reorder(decodingCondition, cluster),
y = accuracy,
colour = cluster),
position = position_jitter(w = 0.3, h = 0.01),
alpha = 0.3,
legend = F) +
geom_hline(yintercept = 0.5, size = .25, linetype = "dashed") +
theme_classic() +
ylim(0,1) +
theme(axis.text.x = element_text(angle = 45,  vjust=1, hjust=1, size = 10),
axis.ticks = element_blank(),
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15)) +
scale_x_discrete(limits=rev,
labels = c("\nFRW - FPW"," ", "\nFRW - FNW"," ", "\nFRW - FFS"," ", "\nFPW - FNW"," ", "\nFPW - FFS"," ", "\nFNW - FFS"," ",
"\nBRW - BPW"," ", "\nBRW - BNW"," ", "\nBRW - BFS"," ", "\nBPW - BNW"," ", "\nBPW - BFS"," ", "\nBNW - BFS"," ")) +
labs(x = "Decoding pair", y = "Accuracy")
ggsave("figures/area-rLO_pairwise-decoding_mean-accuracy.png", width = 3000, height = 1800, dpi = 320, units = "px")
View(controls)
View(controls)
View(experts)
