citation()
library(parallel)
detach("package:parallel", unload = TRUE)
install.packages("agricolae")
x<-2
x
y = 3
x<-2
x
y = 3
plot(x,y)
library(readxl)
wide <- read_excel("Desktop/FLAMES_R_course/Day_1/wide.xlsx")
View(wide)
wideAgain <- wide[,-3]
View(wideAgain)
write.xlsx(wideAgain,"wide_modified.xlsx")
install.packages("xlsx")
write.xlsx(wideAgain,"wide_modified.xlsx")
library(xlsx)
write.xlsx(wideAgain,"wide_modified.xlsx")
write.xlsx(wideAgain,"wide_modified.xlsx")
library(xlsxjars)
detach("package:xlsxjars", unload = TRUE)
detach("package:xlsx", unload = TRUE)
library(xlsx)
write.xlsx(wideAgain,"wide_modified.xlsx")
install.packages("caretEnsemble")
library(xlsx)
View(wideAgain)
library(xlsx)
install.packages("ggplot2")
st.dev(ctr)
exp <- c(24, 29, 37, 38, 45, 47, 56)
ctr <- c(24, 30, 45)
mean(exp)
st.dev(exp)
sd(exp)
mean(exp)
sd(exp)
mean(ctr)
sd(ctr)
exp <- c(24, 29, 37, 38, 45, 47, 56)
ctr <- c(24, 28, 30, 33, 43, 45, 52)
mean(exp)
sd(exp)
mean(ctr)
sd(ctr)
exp <- c(24, 29, 37, 38, 45, 47, 56)
ctr <- c(24, 26, 28, 30, 33, 37, 38, 43, 45, 52, 55)
mean(exp)
sd(exp)
mean(ctr)
sd(ctr)
exp <- c(24, 29, 37, 38, 45, 47, 56)
ctr <- c(24, 28, 30, 33, 37, 38, 43, 45, 52, 55)
mean(exp)
sd(exp)
mean(ctr)
sd(ctr)
exp <- c(24, 29, 37, 38, 45, 47, 56)
ctr <- c(24, 28, 30, 33, 37, 38, 43, 45, 45, 52, 55)
mean(exp)
sd(exp)
mean(ctr)
sd(ctr)
exp <- c(24, 29, 37, 38, 45, 47, 56)
ctr <- c(24, 28, 30, 33, 35, 37, 38, 43, 45, 52, 55)
mean(exp)
sd(exp)
mean(ctr)
sd(ctr)
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
### Load matrices of decoding accuracies for both groups
# Controls
ctrl_accuracies <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-controls_task-wordsDecoding_condition-pairwise-within-script_nbvoxels-73.csv")
# Experts
exp_accuracies <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-experts_task-wordsDecoding_condition-pairwise-within-script_nbvoxels-73.csv")
### Manipulate the matrix to get something readable by ggplot
ctrl_accuracies <- as.data.frame(ctrl_accuracies)
exp_accuracies <- as.data.frame(exp_accuracies)
# Assign the script, to ease splitting the original accuracy matrix: 1 = French, 2 = Braille
ctrl_accuracies$script <- t(repmat(c(1,1,1,1,1,1,2,2,2,2,2,2), 1,36))
exp_accuracies$script <- t(repmat(c(1,1,1,1,1,1,2,2,2,2,2,2), 1,36))
# Assign group, to keep track once merged
ctrl_accuracies$group <- rep("control", 432)
exp_accuracies$group <- rep("expert", 432)
# Join matrices and specify who's control and who's expert
accuracies <- rbind(exp_accuracies, ctrl_accuracies)
# Rename scripts and VWFA
accuracies$script <- ifelse(accuracies$script == 1, "french", "braille")
accuracies$mask <- ifelse(accuracies$mask == "VWFAfr", "VWFA", accuracies$mask)
accuracies$group <- ifelse(accuracies$script == "french" & accuracies$group == "expert",
"experts - french script", accuracies$group)
accuracies$group <- ifelse(accuracies$script == "braille" & accuracies$group == "expert",
"experts - braille script", accuracies$group)
accuracies$group <- ifelse(accuracies$script == "french" & accuracies$group == "control",
"controls - french script", accuracies$group)
accuracies$group <- ifelse(accuracies$script == "braille" & accuracies$group == "control",
"controls - braille script", accuracies$group)
# Drop unnecessary columns
accuracies <- subset(accuracies, select = -c(4,7,8))
# remove tmaps, remove voxNb and image columns
accuracies <- group_split(accuracies, image)[[1]]
accuracies <- subset(accuracies, select = -c(4,5))
# Cluster for area
vwfa_ctr_accu <- group_split(accuracies, mask, group)[[1]]
vwfa_exp_accu <- group_split(accuracies, mask, group)[[2]]
llo_ctr_accu <- group_split(accuracies, mask, group)[[3]]
llo_exp_accu <- group_split(accuracies, mask, group)[[4]]
rlo_ctr_accu <- group_split(accuracies, mask, group)[[5]]
rlo_exp_accu <- group_split(accuracies, mask, group)[[6]]
### RSA
# make RDMs
vwfa_exp_fr <- group_split(vwfa_exp_accu, script)[[2]]
View(vwfa_exp_accu)
View(vwfa_exp_accu)
setwd("~/Desktop/GitHub/VisualBraille_data/code/visualization")
library("readxl")
library("tidyverse")
library("reshape2")
library("gridExtra")
library("pracma")
### Load matrices of decoding accuracies for both groups
# Controls
ctrl_accuracies <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-controls_task-wordsDecoding_condition-pairwise-within-script_nbvoxels-73.csv")
# Experts
exp_accuracies <-
read.csv("../../outputs/derivatives/CoSMoMVPA/mvpa-decoding_grp-experts_task-wordsDecoding_condition-pairwise-within-script_nbvoxels-73.csv")
### Manipulate the matrix to get something readable by ggplot
ctrl_accuracies <- as.data.frame(ctrl_accuracies)
exp_accuracies <- as.data.frame(exp_accuracies)
# Assign the script, to ease splitting the original accuracy matrix: 1 = French, 2 = Braille
ctrl_accuracies$script <- t(repmat(c(1,1,1,1,1,1,2,2,2,2,2,2), 1,36))
exp_accuracies$script <- t(repmat(c(1,1,1,1,1,1,2,2,2,2,2,2), 1,36))
# Assign group, to keep track once merged
ctrl_accuracies$group <- rep("control", 432)
exp_accuracies$group <- rep("expert", 432)
# Join matrices and specify who's control and who's expert
accuracies <- rbind(exp_accuracies, ctrl_accuracies)
# Rename scripts and VWFA
accuracies$script <- ifelse(accuracies$script == 1, "french", "braille")
accuracies$mask <- ifelse(accuracies$mask == "VWFAfr", "VWFA", accuracies$mask)
# accuracies$group <- ifelse(accuracies$script == "french" & accuracies$group == "expert",
#                            "experts - french script", accuracies$group)
# accuracies$group <- ifelse(accuracies$script == "braille" & accuracies$group == "expert",
#                            "experts - braille script", accuracies$group)
# accuracies$group <- ifelse(accuracies$script == "french" & accuracies$group == "control",
#                            "controls - french script", accuracies$group)
# accuracies$group <- ifelse(accuracies$script == "braille" & accuracies$group == "control",
#                            "controls - braille script", accuracies$group)
# Drop unnecessary columns
accuracies <- subset(accuracies, select = -c(4,7,8))
# remove tmaps, remove voxNb and image columns
accuracies <- group_split(accuracies, image)[[1]]
accuracies <- subset(accuracies, select = -c(4,5))
# Cluster for area
vwfa_ctr_accu <- group_split(accuracies, mask, group)[[1]]
vwfa_exp_accu <- group_split(accuracies, mask, group)[[2]]
llo_ctr_accu <- group_split(accuracies, mask, group)[[3]]
llo_exp_accu <- group_split(accuracies, mask, group)[[4]]
rlo_ctr_accu <- group_split(accuracies, mask, group)[[5]]
rlo_exp_accu <- group_split(accuracies, mask, group)[[6]]
# make RDMs
vwfa_exp_fr <- group_split(vwfa_exp_accu, script)[[2]]
vwfa_exp_br <- group_split(vwfa_exp_accu, script)[[1]]
vwfa_ctr_fr <- group_split(vwfa_ctr_accu, script)[[2]]
vwfa_ctr_br <- group_split(vwfa_ctr_accu, script)[[1]]
llo_exp_fr <- group_split(llo_exp_accu, script)[[2]]
llo_exp_br <- group_split(llo_exp_accu, script)[[1]]
rlo_exp_fr <- group_split(rlo_exp_accu, script)[[2]]
rlo_exp_br <- group_split(rlo_exp_accu, script)[[1]]
# perform correlations
vwfa_exp_corr <- cor.test(vwfa_exp_fr[["accuracy"]], vwfa_exp_br[["accuracy"]])
vwfa_ctr_corr <- cor.test(vwfa_ctr_fr[["accuracy"]], vwfa_ctr_br[["accuracy"]])
llo_corr <- cor.test(llo_exp_fr[["accuracy"]], llo_exp_br[["accuracy"]])
rlo_corr <- cor.test(rlo_exp_fr[["accuracy"]], rlo_exp_br[["accuracy"]])
# average decodings
vwfa_exp_br_means <- aggregate(vwfa_exp_br$accuracy, list(vwfa_exp_br$decodingCondition), FUN=mean)
vwfa_exp_fr_means <- aggregate(vwfa_exp_fr$accuracy, list(vwfa_exp_fr$decodingCondition), FUN=mean)
vwfa_ctr_br_means <- aggregate(vwfa_ctr_br$accuracy, list(vwfa_ctr_br$decodingCondition), FUN=mean)
vwfa_ctr_fr_means <- aggregate(vwfa_ctr_fr$accuracy, list(vwfa_ctr_fr$decodingCondition), FUN=mean)
llo_exp_br_means <- aggregate(llo_exp_br$accuracy, list(llo_exp_br$decodingCondition), FUN=mean)
llo_exp_fr_means <- aggregate(llo_exp_fr$accuracy, list(llo_exp_fr$decodingCondition), FUN=mean)
rlo_exp_br_means <- aggregate(rlo_exp_br$accuracy, list(rlo_exp_br$decodingCondition), FUN=mean)
rlo_exp_fr_means <- aggregate(rlo_exp_fr$accuracy, list(rlo_exp_fr$decodingCondition), FUN=mean)
# make RDM - manually since they're small
vwfa_exp_br_rdm = c(vwfa_exp_br_means[[4,2]],vwfa_exp_br_means[[2,2]],vwfa_exp_br_means[[1,2]],NaN,vwfa_exp_br_means[[5,2]],vwfa_exp_br_means[[3,2]],NaN,vwfa_exp_br_means[[1,2]],
vwfa_exp_br_means[[6,2]],NaN,vwfa_exp_br_means[[3,2]],vwfa_exp_br_means[[2,2]],NaN,vwfa_exp_br_means[[6,2]],vwfa_exp_br_means[[5,2]],vwfa_exp_br_means[[4,2]])
vwfa_exp_fr_rdm = c(vwfa_exp_fr_means[[4,2]],vwfa_exp_fr_means[[2,2]],vwfa_exp_fr_means[[1,2]],NaN,vwfa_exp_fr_means[[5,2]],vwfa_exp_fr_means[[3,2]],NaN,vwfa_exp_fr_means[[1,2]],
vwfa_exp_fr_means[[6,2]],NaN,vwfa_exp_fr_means[[3,2]],vwfa_exp_fr_means[[2,2]],NaN,vwfa_exp_fr_means[[6,2]],vwfa_exp_fr_means[[5,2]],vwfa_exp_fr_means[[4,2]])
vwfa_ctr_br_rdm = c(vwfa_ctr_br_means[[4,2]],vwfa_ctr_br_means[[2,2]],vwfa_ctr_br_means[[1,2]],NaN,vwfa_ctr_br_means[[5,2]],vwfa_ctr_br_means[[3,2]],NaN,vwfa_ctr_br_means[[1,2]],
vwfa_ctr_br_means[[6,2]],NaN,vwfa_ctr_br_means[[3,2]],vwfa_ctr_br_means[[2,2]],NaN,vwfa_ctr_br_means[[6,2]],vwfa_ctr_br_means[[5,2]],vwfa_ctr_br_means[[4,2]])
vwfa_ctr_fr_rdm = c(vwfa_ctr_fr_means[[4,2]],vwfa_ctr_fr_means[[2,2]],vwfa_ctr_fr_means[[1,2]],NaN,vwfa_ctr_fr_means[[5,2]],vwfa_ctr_fr_means[[3,2]],NaN,vwfa_ctr_fr_means[[1,2]],
vwfa_ctr_fr_means[[6,2]],NaN,vwfa_ctr_fr_means[[3,2]],vwfa_ctr_fr_means[[2,2]],NaN,vwfa_ctr_fr_means[[6,2]],vwfa_ctr_fr_means[[5,2]],vwfa_ctr_fr_means[[4,2]])
llo_exp_br_rdm = c(llo_exp_br_means[[4,2]],llo_exp_br_means[[2,2]],llo_exp_br_means[[1,2]],NaN,llo_exp_br_means[[5,2]],llo_exp_br_means[[3,2]],NaN,llo_exp_br_means[[1,2]],
llo_exp_br_means[[6,2]],NaN,llo_exp_br_means[[3,2]],llo_exp_br_means[[2,2]],NaN,llo_exp_br_means[[6,2]],llo_exp_br_means[[5,2]],llo_exp_br_means[[4,2]])
llo_exp_fr_rdm = c(llo_exp_fr_means[[4,2]],llo_exp_fr_means[[2,2]],llo_exp_fr_means[[1,2]],NaN,llo_exp_fr_means[[5,2]],llo_exp_fr_means[[3,2]],NaN,llo_exp_fr_means[[1,2]],
llo_exp_fr_means[[6,2]],NaN,llo_exp_fr_means[[3,2]],llo_exp_fr_means[[2,2]],NaN,llo_exp_fr_means[[6,2]],llo_exp_fr_means[[5,2]],llo_exp_fr_means[[4,2]])
rlo_exp_br_rdm = c(rlo_exp_br_means[[4,2]],rlo_exp_br_means[[2,2]],rlo_exp_br_means[[1,2]],NaN,rlo_exp_br_means[[5,2]],rlo_exp_br_means[[3,2]],NaN,rlo_exp_br_means[[1,2]],
rlo_exp_br_means[[6,2]],NaN,rlo_exp_br_means[[3,2]],rlo_exp_br_means[[2,2]],NaN,rlo_exp_br_means[[6,2]],rlo_exp_br_means[[5,2]],rlo_exp_br_means[[4,2]])
rlo_exp_fr_rdm = c(rlo_exp_fr_means[[4,2]],rlo_exp_fr_means[[2,2]],rlo_exp_fr_means[[1,2]],NaN,rlo_exp_fr_means[[5,2]],rlo_exp_fr_means[[3,2]],NaN,rlo_exp_fr_means[[1,2]],
rlo_exp_fr_means[[6,2]],NaN,rlo_exp_fr_means[[3,2]],rlo_exp_fr_means[[2,2]],NaN,rlo_exp_fr_means[[6,2]],rlo_exp_fr_means[[5,2]],rlo_exp_fr_means[[4,2]])
# Re-arrange labels to make ggplot happy
fx <- c("FRW", "FPW", "FNW", "FFS"); fy <- c("FFS", "FNW", "FPW", "FRW")
bx <- c("BRW", "BPW", "BNW", "BFS"); by <- c("BFS", "BNW", "BPW", "BRW")
rdm_exp_vwfa_fr <- expand.grid(X=fx, Y=fy); rdm_exp_vwfa_fr$accuracy <- vwfa_exp_fr_rdm
rdm_exp_vwfa_br <- expand.grid(X=bx, Y=by); rdm_exp_vwfa_br$accuracy <- vwfa_exp_br_rdm
rdm_ctr_vwfa_fr <- expand.grid(X=fx, Y=fy); rdm_ctr_vwfa_fr$accuracy <- vwfa_ctr_fr_rdm
rdm_ctr_vwfa_br <- expand.grid(X=bx, Y=by); rdm_ctr_vwfa_br$accuracy <- vwfa_ctr_br_rdm
rdm_llo_fr <- expand.grid(X=x, Y=y); rdm_llo_fr$accuracy <- llo_exp_fr_rdm
# make RDMs
vwfa_exp_fr <- group_split(vwfa_exp_accu, script)[[2]]
vwfa_exp_br <- group_split(vwfa_exp_accu, script)[[1]]
vwfa_ctr_fr <- group_split(vwfa_ctr_accu, script)[[2]]
vwfa_ctr_br <- group_split(vwfa_ctr_accu, script)[[1]]
llo_exp_fr <- group_split(llo_exp_accu, script)[[2]]
llo_exp_br <- group_split(llo_exp_accu, script)[[1]]
rlo_exp_fr <- group_split(rlo_exp_accu, script)[[2]]
rlo_exp_br <- group_split(rlo_exp_accu, script)[[1]]
# perform correlations
vwfa_exp_corr <- cor.test(vwfa_exp_fr[["accuracy"]], vwfa_exp_br[["accuracy"]])
vwfa_ctr_corr <- cor.test(vwfa_ctr_fr[["accuracy"]], vwfa_ctr_br[["accuracy"]])
llo_corr <- cor.test(llo_exp_fr[["accuracy"]], llo_exp_br[["accuracy"]])
rlo_corr <- cor.test(rlo_exp_fr[["accuracy"]], rlo_exp_br[["accuracy"]])
# average decodings
vwfa_exp_br_means <- aggregate(vwfa_exp_br$accuracy, list(vwfa_exp_br$decodingCondition), FUN=mean)
vwfa_exp_fr_means <- aggregate(vwfa_exp_fr$accuracy, list(vwfa_exp_fr$decodingCondition), FUN=mean)
vwfa_ctr_br_means <- aggregate(vwfa_ctr_br$accuracy, list(vwfa_ctr_br$decodingCondition), FUN=mean)
vwfa_ctr_fr_means <- aggregate(vwfa_ctr_fr$accuracy, list(vwfa_ctr_fr$decodingCondition), FUN=mean)
llo_exp_br_means <- aggregate(llo_exp_br$accuracy, list(llo_exp_br$decodingCondition), FUN=mean)
llo_exp_fr_means <- aggregate(llo_exp_fr$accuracy, list(llo_exp_fr$decodingCondition), FUN=mean)
rlo_exp_br_means <- aggregate(rlo_exp_br$accuracy, list(rlo_exp_br$decodingCondition), FUN=mean)
rlo_exp_fr_means <- aggregate(rlo_exp_fr$accuracy, list(rlo_exp_fr$decodingCondition), FUN=mean)
vwfa_exp_br_rdm = c(vwfa_exp_br_means[[4,2]],vwfa_exp_br_means[[2,2]],vwfa_exp_br_means[[1,2]],NaN,vwfa_exp_br_means[[5,2]],vwfa_exp_br_means[[3,2]],NaN,vwfa_exp_br_means[[1,2]],
vwfa_exp_br_means[[6,2]],NaN,vwfa_exp_br_means[[3,2]],vwfa_exp_br_means[[2,2]],NaN,vwfa_exp_br_means[[6,2]],vwfa_exp_br_means[[5,2]],vwfa_exp_br_means[[4,2]])
vwfa_exp_fr_rdm = c(vwfa_exp_fr_means[[4,2]],vwfa_exp_fr_means[[2,2]],vwfa_exp_fr_means[[1,2]],NaN,vwfa_exp_fr_means[[5,2]],vwfa_exp_fr_means[[3,2]],NaN,vwfa_exp_fr_means[[1,2]],
vwfa_exp_fr_means[[6,2]],NaN,vwfa_exp_fr_means[[3,2]],vwfa_exp_fr_means[[2,2]],NaN,vwfa_exp_fr_means[[6,2]],vwfa_exp_fr_means[[5,2]],vwfa_exp_fr_means[[4,2]])
vwfa_ctr_br_rdm = c(vwfa_ctr_br_means[[4,2]],vwfa_ctr_br_means[[2,2]],vwfa_ctr_br_means[[1,2]],NaN,vwfa_ctr_br_means[[5,2]],vwfa_ctr_br_means[[3,2]],NaN,vwfa_ctr_br_means[[1,2]],
vwfa_ctr_br_means[[6,2]],NaN,vwfa_ctr_br_means[[3,2]],vwfa_ctr_br_means[[2,2]],NaN,vwfa_ctr_br_means[[6,2]],vwfa_ctr_br_means[[5,2]],vwfa_ctr_br_means[[4,2]])
vwfa_ctr_fr_rdm = c(vwfa_ctr_fr_means[[4,2]],vwfa_ctr_fr_means[[2,2]],vwfa_ctr_fr_means[[1,2]],NaN,vwfa_ctr_fr_means[[5,2]],vwfa_ctr_fr_means[[3,2]],NaN,vwfa_ctr_fr_means[[1,2]],
vwfa_ctr_fr_means[[6,2]],NaN,vwfa_ctr_fr_means[[3,2]],vwfa_ctr_fr_means[[2,2]],NaN,vwfa_ctr_fr_means[[6,2]],vwfa_ctr_fr_means[[5,2]],vwfa_ctr_fr_means[[4,2]])
llo_exp_br_rdm = c(llo_exp_br_means[[4,2]],llo_exp_br_means[[2,2]],llo_exp_br_means[[1,2]],NaN,llo_exp_br_means[[5,2]],llo_exp_br_means[[3,2]],NaN,llo_exp_br_means[[1,2]],
llo_exp_br_means[[6,2]],NaN,llo_exp_br_means[[3,2]],llo_exp_br_means[[2,2]],NaN,llo_exp_br_means[[6,2]],llo_exp_br_means[[5,2]],llo_exp_br_means[[4,2]])
llo_exp_fr_rdm = c(llo_exp_fr_means[[4,2]],llo_exp_fr_means[[2,2]],llo_exp_fr_means[[1,2]],NaN,llo_exp_fr_means[[5,2]],llo_exp_fr_means[[3,2]],NaN,llo_exp_fr_means[[1,2]],
llo_exp_fr_means[[6,2]],NaN,llo_exp_fr_means[[3,2]],llo_exp_fr_means[[2,2]],NaN,llo_exp_fr_means[[6,2]],llo_exp_fr_means[[5,2]],llo_exp_fr_means[[4,2]])
rlo_exp_br_rdm = c(rlo_exp_br_means[[4,2]],rlo_exp_br_means[[2,2]],rlo_exp_br_means[[1,2]],NaN,rlo_exp_br_means[[5,2]],rlo_exp_br_means[[3,2]],NaN,rlo_exp_br_means[[1,2]],
rlo_exp_br_means[[6,2]],NaN,rlo_exp_br_means[[3,2]],rlo_exp_br_means[[2,2]],NaN,rlo_exp_br_means[[6,2]],rlo_exp_br_means[[5,2]],rlo_exp_br_means[[4,2]])
rlo_exp_fr_rdm = c(rlo_exp_fr_means[[4,2]],rlo_exp_fr_means[[2,2]],rlo_exp_fr_means[[1,2]],NaN,rlo_exp_fr_means[[5,2]],rlo_exp_fr_means[[3,2]],NaN,rlo_exp_fr_means[[1,2]],
rlo_exp_fr_means[[6,2]],NaN,rlo_exp_fr_means[[3,2]],rlo_exp_fr_means[[2,2]],NaN,rlo_exp_fr_means[[6,2]],rlo_exp_fr_means[[5,2]],rlo_exp_fr_means[[4,2]])
fx <- c("FRW", "FPW", "FNW", "FFS"); fy <- c("FFS", "FNW", "FPW", "FRW")
bx <- c("BRW", "BPW", "BNW", "BFS"); by <- c("BFS", "BNW", "BPW", "BRW")
rdm_exp_vwfa_fr <- expand.grid(X=fx, Y=fy); rdm_exp_vwfa_fr$accuracy <- vwfa_exp_fr_rdm
rdm_exp_vwfa_br <- expand.grid(X=bx, Y=by); rdm_exp_vwfa_br$accuracy <- vwfa_exp_br_rdm
rdm_ctr_vwfa_fr <- expand.grid(X=fx, Y=fy); rdm_ctr_vwfa_fr$accuracy <- vwfa_ctr_fr_rdm
rdm_ctr_vwfa_br <- expand.grid(X=bx, Y=by); rdm_ctr_vwfa_br$accuracy <- vwfa_ctr_br_rdm
rdm_llo_fr <- expand.grid(X=x, Y=y); rdm_llo_fr$accuracy <- llo_exp_fr_rdm
rdm_exp_vwfa_fr <- expand.grid(X=fx, Y=fy); rdm_exp_vwfa_fr$accuracy <- vwfa_exp_fr_rdm
rdm_exp_vwfa_br <- expand.grid(X=bx, Y=by); rdm_exp_vwfa_br$accuracy <- vwfa_exp_br_rdm
rdm_ctr_vwfa_fr <- expand.grid(X=fx, Y=fy); rdm_ctr_vwfa_fr$accuracy <- vwfa_ctr_fr_rdm
rdm_ctr_vwfa_br <- expand.grid(X=bx, Y=by); rdm_ctr_vwfa_br$accuracy <- vwfa_ctr_br_rdm
# VWFA - EXP - FR
ggplot(rdm_exp_vwfa_fr, aes(X, Y, fill = accuracy)) +
geom_tile() + theme_classic() +  theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(face="bold", colour="#000000", size=25),
axis.text.y = element_text(face="bold", colour="#000000", size=25), axis.line.x = element_blank(), axis.line.y = element_blank()) +
scale_fill_gradient2(low = "#ffffff", mid = "#FFFFFF", high = "#69b5a2", na.value = "#FFFFFF", limit = c(0.1,1)) +
guides(fill = guide_colourbar(barwidth = 0.8, barheight = 20, ticks = FALSE, title = "", label.theme = element_text(size = 20, angle = 0))) +  coord_fixed()
ggsave("figures/vss_rsa_vwfa-exp-fr.png", width = 3600, height = 3000, dpi = 320, units = "px")
ggplot(rdm_exp_vwfa_fr, aes(X, Y, fill = accuracy)) +
geom_tile() + theme_classic() +  theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(face="bold", colour="#000000", size=25),
axis.text.y = element_text(face="bold", colour="#000000", size=25), axis.line.x = element_blank(), axis.line.y = element_blank()) +
scale_fill_gradient2(low = "#ffffff", mid = "#FFFFFF", high = "#69b5a2", na.value = "#FFFFFF", limit = c(0.1,1)) +
guides(fill = guide_colourbar(barwidth = 0.8, barheight = 50, ticks = FALSE, title = "", label.theme = element_text(size = 20, angle = 0))) +  coord_fixed()
ggsave("figures/vss_rsa_vwfa-exp-fr.png", width = 2400, height = 2000, dpi = 320, units = "px")
ggplot(rdm_exp_vwfa_fr, aes(X, Y, fill = accuracy)) +
geom_tile() + theme_classic() +  theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(face="bold", colour="#000000", size=25),
axis.text.y = element_text(face="bold", colour="#000000", size=25), axis.line.x = element_blank(), axis.line.y = element_blank()) +
scale_fill_gradient2(low = "#ffffff", mid = "#FFFFFF", high = "#69b5a2", na.value = "#FFFFFF", limit = c(0.1,1)) +
guides(fill = guide_colourbar(barwidth = 0.8, barheight = 40, ticks = FALSE, title = "", label.theme = element_text(size = 20, angle = 0))) +  coord_fixed()
ggsave("figures/vss_rsa_vwfa-exp-fr.png", width = 2400, height = 2000, dpi = 320, units = "px")
ggplot(rdm_exp_vwfa_fr, aes(X, Y, fill = accuracy)) +
geom_tile() + theme_classic() +  theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(face="bold", colour="#000000", size=25),
axis.text.y = element_text(face="bold", colour="#000000", size=25), axis.line.x = element_blank(), axis.line.y = element_blank()) +
scale_fill_gradient2(low = "#ffffff", mid = "#FFFFFF", high = "#69b5a2", na.value = "#FFFFFF", limit = c(0.1,1)) +
guides(fill = guide_colourbar(barwidth = 0.8, barheight = 40, ticks = FALSE, title = "", label.theme = element_text(size = 20, angle = 0))) +  coord_fixed()
ggsave("figures/vss_rsa_vwfa-exp-fr.png", width = 3600, height = 3000, dpi = 320, units = "px")
# VWFA - BR
ggplot(rdm_exp_vwfa_br, aes(X, Y, fill = accuracy)) +
geom_tile() + theme_classic() +  theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(face="bold", colour="#000000", size=25),
axis.text.y = element_text(face="bold", colour="#000000", size=25), axis.line.x = element_blank(), axis.line.y = element_blank()) +
scale_fill_gradient2(low = "#FFFFFF", mid = "#FFFFFF", high = "#ff9e4a", na.value = "#FFFFFF", limit = c(0.1,1)) +
guides(fill = guide_colourbar(barwidth = 0.8, barheight = 40, ticks = FALSE, title = "", label.theme = element_text(size = 20, angle = 0))) +  coord_fixed()
ggsave("figures/vss_rsa_vwfa-exp-br.png", width = 3600, height = 3000, dpi = 320, units = "px")
# VWFA - CTR - FR
ggplot(rdm_ctr_vwfa_fr, aes(X, Y, fill = accuracy)) +
geom_tile() + theme_classic() +  theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(face="bold", colour="#000000", size=25),
axis.text.y = element_text(face="bold", colour="#000000", size=25), axis.line.x = element_blank(), axis.line.y = element_blank()) +
scale_fill_gradient2(low = "#FFFFFF", mid = "#FFFFFF", high = "#699ae5", na.value = "#FFFFFF", limit = c(0.1,1)) +
guides(fill = guide_colourbar(barwidth = 0.8, barheight = 40, ticks = FALSE, title = "", label.theme = element_text(size = 20, angle = 0))) +  coord_fixed()
ggsave("figures/vss_rsa_vwfa-ctr-fr.png", width = 3600, height = 3000, dpi = 320, units = "px")
# VWFA - BR
ggplot(rdm_ctr_vwfa_br, aes(X, Y, fill = accuracy)) +
geom_tile() + theme_classic() +  theme(axis.title.x=element_blank(), axis.ticks.x=element_blank(),
axis.title.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x = element_text(face="bold", colour="#000000", size=25),
axis.text.y = element_text(face="bold", colour="#000000", size=25), axis.line.x = element_blank(), axis.line.y = element_blank()) +
scale_fill_gradient2(low = "#FFFFFF", mid = "#FFFFFF", high = "#da5F49", na.value = "#FFFFFF", limit = c(0.1,1)) +
guides(fill = guide_colourbar(barwidth = 0.8, barheight = 40, ticks = FALSE, title = "", label.theme = element_text(size = 20, angle = 0))) +  coord_fixed()
ggsave("figures/vss_rsa_vwfa-ctr-br.png", width = 3600, height = 3000, dpi = 320, units = "px")
